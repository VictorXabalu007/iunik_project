services:
  database:
    image: postgres:12
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./db/project.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 5050:80
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - database

  api:
    build: .
    restart: always
    ports:
      - ${API_PORT}:${API_PORT}
    env_file:
      - .env
    environment:
      PORT: ${API_PORT}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_PASS: ${JWT_PASS}
      FROM_MAIL: ${FROM_MAIL}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASS: ${MAIL_PASS}
      ACCESS_TOKEN: ${ACCESS_TOKEN}
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - database

  proxy:
    image: nginx:latest
    restart: always
    ports:
      - 80:80
    env_file:
      - .env
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
